
@{
    var menu = ViewBag.topMenu ?? 
        (ViewContext.RouteData.Values["controller"] as string == "Installation" ? ViewContext.RouteData.Values["id"] : ViewContext.RouteData.Values["controller"]) as string;
    
}
    <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
            <span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="@Url.Action("Index", "Installation")"><span class="glyphicon glyphicon-home"></span></a>
    </div>
<div class="collapse navbar-collapse"
      id="bs-example-navbar-collapse-1">
        <ul class="nav navbar-nav">
         @if (LoginRole.Is(PositionEnum.Sales) || LoginRole.Is(PositionEnum.ProjectManager))
         {
             foreach (var status in Enum.GetValues(typeof(Installation.StatusEnum)).Cast<Installation.StatusEnum>())
             {
                <li @Html.Raw(menu == status.ToString() ? "class='active'" : "")>
                    <a href="@Url.Action("Index", "Installation", new {id = status})">@status</a>
                </li>
             }
         }

        </ul>
        <ul class="nav navbar-nav navbar-right">
            <li @Html.Raw(menu == "Customer" ? "class='active'" : ""  ) >
                <a href="@Url.Action("Index", "Customer")"><span class="glyphicon glyphicon-pencil margin-right-5"></span> Customers</a>
            </li>
            @if (Session["Login"] != null)
            {
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                        <span class="glyphicon glyphicon-user"></span>
                        @( ((Employee)Session["Login"]).Position )
                        <strong class="caret"></strong>
                    </a>
                    <ul class="dropdown-menu">
                        @if ((Session["Login"] as Employee).Position == PositionEnum.Boss)
                        {
                            <li class="divider">
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "Employee")">Employees</a>
                            </li>
                        }
                        <li>
                            <a href="@Url.Action("Edit", "Employee", new {id = (Session["Login"] as Employee).Id})">My account</a>
                        </li>
                        <li>
                            <a href="@Url.Action("LogOff", "Employee")">Log off</a>
                        </li>

                    </ul>
                </li>
            }
        </ul>

        <div class="navbar-form navbar-right navbar-input-group" >
            <div class="input-group">
                <input type="text" class="form-control" id="searchTerm" data-url="@Url.Action( "Search","Installation", new { id = "" })" >
                <span class="input-group-btn">
                    <button class="btn btn-default"
                            type="button"
                            data-toggle="tooltip" data-placement="bottom" title="Project, customer or attachment title">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </span>
            </div>
        </div>

    </div>

<script language="javascript">
    $('#searchTerm').on('keypress', function(event) {
        if (event.which === 13) {
            SearchGo( this );
        }
    });

    function SearchGo( input ) {
        
        var url = $(input ).data("url");
        window.location = url + $(input).val();
    }



</script>
